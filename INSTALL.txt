
Table of contents:

  1. Software requirements
  2. Install manually
  3. Install on Debian Stable (squeeze)
  4. Install on Gentoo
  5. Install on FreeBSD
  6. Install on Windows
  7. Run the unit tests
  8. Checkout from the Git repository


1. Software requirements
========================

Software    Version  Used by          Home
----------  -------  ---------------  ----------------------------------------
Python        2.6.4                   http://www.python.org/
pkg-config     0.23                   http://pkg-config.freedesktop.org/
pytz                 core             http://pytz.sourceforge.net/
glib           2.20  fs               http://www.gtk.org/
pygobject      2.20  fs               http://www.pygtk.org/
pygit2       0.24.2  pkg, database    https://github.com/libgit2/pygit2
Git            2.11  pkg, database    http://git-scm.com/
libmagic       5.05  database         http://www.darwinsys.com/file/ [1]
xapian        1.0.8  database         http://www.xapian.org/
pywin32         212  (Windows)        http://sf.net/projects/pywin32/
gettext        0.17                   http://www.gnu.org/software/gettext/
sphinx               ipkg-doc.py      http://pypi.python.org/pypi/Sphinx

[1] Or, alternatively, http://pypi.python.org/pypi/python-magic

To be able to handle some file formats you need:

Software    Version  Format           Home
----------  -------  ---------------  ----------------------------------------
PIL           1.1.7  PNG, JPG, etc.   http://www.pythonware.com/products/pil/
rsvg           2.30  SVG              http://www.pygtk.org/
xlrd          0.6.1  XLS              http://www.lexicon.net/sjmachin/xlrd.htm
poppler        0.20  PDF              http://poppler.freedesktop.org/
wv2           0.2.3  DOC              https://sourceforge.net/projects/wvware


2. Install manually
========================

First download the package (replace XX and Y by the desired major and minor
version numbers):

  $ wget http://download.hforge.org/0.XX/itools-0.XX.Y.tar.gz

Now unpack the source:

  $ tar xzf itools-0.XX.Y.tar.gz

Change the working directory this way:

  $ cd itools-0.XX.Y

And finally install itools:

  $ python setup.py install


3. Install on Debian Stable (squeeze)
=====================================

1. Most dependencies are packaged in Debian:

  # apt-get install gettext git python-gobject-dev python-tz
  # apt-get install python-xapian
  # apt-get install python-imaging python-rsvg
  # apt-get install g++ libpoppler-dev libwv2-dev python-xlrd

2. Install libgit2 and pygit2 manually, check:

  - https://github.com/libgit2/libgit2
  - https://github.com/libgit2/pygit2

3. And finally install the itools package by hand (see Section 2).


4. Install on Gentoo
========================

If you use Gentoo you are lucky.  First because libgit2 and pygit2 are
packaged (you just need to unmask them). And second, because itools is
available in the hforge overlay, start by installing this overlay.

Step by step:

1. Unmask and install libgit2/pygit2

  # echo "dev-libs/libgit2  ~amd64" >> /etc/portage/package.keywords
  # echo "dev-python/pygit2 ~amd64" >> /etc/portage/package.keywords
  # emerge pygit2

2. Edit the /etc/layman/layman.cfg file and add the hforge overlay list, so
   the 'overlays' variable looks this way:

  overlays  : http://www.gentoo.org/proj/en/overlays/repositories.xml
              https://raw.github.com/hforge/overlay/master/layman/list.xml

3. Add the hforge overlay:

  # layman -a hforge-overlay

4. Unmask itools and emerge:

  # echo "dev-python/itools ~amd64" >> /etc/portage/package.keywords
  # layman -S
  # emerge itools

5. Install on FreeBSD
=====================

iTools has been ported[1] by wen@FreeBSD.org. This has been tested on FreeBSD 8 and 9.

	# cd /usr/ports/devel/py-itools
	# make all install clean
	
Verify it works, by:
	
	[khine@awakwe:~] python
	Python 2.7.3 (default, May 18 2012, 11:54:56) 
	[GCC 4.2.1 20070831 patched [FreeBSD]] on freebsd9
	Type "help", "copyright", "credits" or "license" for more information.
	>>> import itools
	>>> itools.__version__
	'0.78'
	>>>
	
Note: When building pynumy do not use ATLAS use optimized blas library as this breaks the install.

[1] http://www.freshports.org/devel/py-itools

6. Install on Windows
========================

Today itools does not work on Windows.


7. Run the unit tests
========================

To run the unit tests first you must download and unpack the source as
described in Section 2.

Then change to the test directory and run the tests:

  $ cd itools-0.XX.Y/test
  $ python test.py

If there are errors, please report either to the issue tracker or to the
mailing list:

  - http://bugs.hforge.org/
  - http://www.hforge.org/community


8. Checkout from the Git repository
===================================

If you desire to install the latest and hottest revision of itools, you need
to clone the Git repository this way:

  $ git clone git://git.hforge.org/itools.git
  $ cd itools

Then checkout the latest stable branch:

  $ git checkout -b 0.XX origin/0.XX

Then installing itools properly is a three steps process:

  $ python setup.py install
